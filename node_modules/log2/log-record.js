const util = require("util");

class LogRecord
{
    constructor(category, label,level="info")
    {
        this.data  = {
            category, label, level
        };        

        this.isSaved = false;                   
    }

    message(msg, ...params)
    {        
        this.setPropertyOnLogRecordData("message",util.format(msg,...params) );
        return this;
    }

    setData(name, value)
    {
        this.setPropertyOnLogRecordData(name,value);
        return this;
    }
    
    setPropertyOnLogRecordData(name,value)
    {
        this.data[name] = value;
        return this;
    }

    merge(thingToMerge)
    {
        this.data = {...this.data, ...thingToMerge};
    }

    mergePropertyOnLogRecordData(name, thingToMerge)
    {    
        this.data[name] = {...this.data[name], ...thingToMerge};
    }

    setDetailsValue(valueName, value)
    {
        this.setValueForPropertyOnLogRecordData("details", valueName, value);
        return this;
    }
    setValueForPropertyOnLogRecordData(propertyName, valueName, value)
    {
        if(!this.data[propertyName])
        {
            this.data[propertyName] = {};
        }

        this.data[propertyName][valueName] = value;
        return this;
    }

    appendMessage(msg, ...params)
    {
        this.appendItemToLogDataProperty("messages", util.format(msg,...params));        
        return this;
    }    

    logThing(thing)
    {
        this.appendItemToLogDataProperty("things", thing);
        return this;
    }

    appendItemToLogDataProperty(name, thingToAppend)
    {
        if(!this.data[name])
        {
            this.data[name] = [];
        }
        this.data[name].push(thingToAppend);
        return this;
    }

    writeLogRecord()
    {
        if(!this.isSaved)
        {
            //this.outputFunction(this.data);  
            const LogFactory = require("./log-factory");
            //console.log("logrecord:" + LogFactory); 
            LogFactory.writeRecord(this.data);
            this.isSaved = true;            
        }
        return this;
    }

}

module.exports = LogRecord;