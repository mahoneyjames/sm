/*
    Provides decorated log classes that allows us to give some simple context to our log data
    Usage is
    const logger = require("logger")("friendly class name")

    There are helper methods to write directly to the log e.g. logger.info(message)
    but we can also create a batched up log record using logger.batch()
    that allows us to incrementally append to a log record

*/
const LogFactory = require("./log-factory");
module.exports = function(category){
    


    const decoratedLogger = {category};
    
    decoratedLogger.info = (message, ...params)=>LogFactory.getLogRecord(category, null, "info",false).message(message, ...params).writeLogRecord();
    decoratedLogger.warn = (message, ...params)=>LogFactory.getLogRecord(category, null, "warn",false).message(message, ...params).writeLogRecord();
    decoratedLogger.debug = (message, ...params)=>LogFactory.getLogRecord(category, null, "debug",false).message(message, ...params).writeLogRecord();
    decoratedLogger.log = (level)=> LogFactory.getLogRecord(category, null, level,false);
    decoratedLogger.batch = (label, level)=>LogFactory.getLogRecord(category, label, level, true);
    
    return decoratedLogger;
}